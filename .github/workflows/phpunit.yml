name: PHP Unit Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0' # Run once per week on Sunday at midnight

jobs:
  unit-tests:
    name: PHP ${{ matrix.php-version }} Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['7.4', '8.1', '8.2']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, gd, xml, soap, zip, bcmath
          coverage: xdebug

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHPUnit
        run: composer require --dev phpunit/phpunit:^9.5

      - name: Install Mocking dependencies
        run: |
          composer require --dev mockery/mockery
          composer require --dev phpunit/php-code-coverage

      - name: Run unit tests
        run: vendor/bin/phpunit -c phpunit.xml.dist --coverage-text

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl, gd, xml, soap, zip, bcmath
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress
          composer require --dev phpstan/phpstan:^1.8
          composer require --dev squizlabs/php_codesniffer:^3.7

      - name: Run PHPStan
        run: vendor/bin/phpstan analyze --level=3 ./ --exclude=vendor

      - name: Run PHP_CodeSniffer
        run: vendor/bin/phpcs --standard=PSR12 --extensions=php --ignore=vendor/* .
