name: PHP Unit Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0' # Run once per week on Sunday at midnight

jobs:
  test-magento-compatibility:
    name: Magento ${{ matrix.magento-version }} / PHP ${{ matrix.php-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        magento-version: ['2.4.0', '2.4.1', '2.4.2', '2.4.3', '2.4.4', '2.4.5', '2.4.6']
        php-version: ['7.4', '8.1', '8.2']
        exclude:
          # PHP 8.1+ is only compatible with newer Magento versions
          - magento-version: '2.4.0'
            php-version: '8.1'
          - magento-version: '2.4.0'
            php-version: '8.2'
          - magento-version: '2.4.1'
            php-version: '8.1'
          - magento-version: '2.4.1'
            php-version: '8.2'
          - magento-version: '2.4.2'
            php-version: '8.1'
          - magento-version: '2.4.2'
            php-version: '8.2'
          - magento-version: '2.4.3'
            php-version: '8.2'
          # Older PHP versions are not compatible with newer Magento versions
          - magento-version: '2.4.4'
            php-version: '7.4'
          - magento-version: '2.4.5'
            php-version: '7.4'
          - magento-version: '2.4.6'
            php-version: '7.4'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, gd, xml, soap, zip, bcmath
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Configure Composer authentication
        run: |
          composer config -g http-basic.repo.magento.com ${{ secrets.MAGENTO_USERNAME }} ${{ secrets.MAGENTO_PASSWORD }}

      - name: Create test project
        run: |
          composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=${{ matrix.magento-version }} test-project
          cd test-project
          composer config minimum-stability dev
          composer config prefer-stable true
          # Create the module directory
          mkdir -p app/code/C0defusi0n/SecurityScanner

      - name: Copy module files to test project
        run: |
          rsync -av --exclude='test-project' --exclude='.git' --exclude='vendor' . test-project/app/code/C0defusi0n/SecurityScanner/

      - name: Install module dependencies
        working-directory: test-project
        run: |
          composer require --dev phpunit/phpunit:^9.5
          composer require phpstan/phpstan:^1.8
          # Enable the module
          bin/magento module:enable C0defusi0n_SecurityScanner

      - name: Run unit tests
        working-directory: test-project/app/code/C0defusi0n/SecurityScanner
        run: |
          ../../../../../../vendor/bin/phpunit -c phpunit.xml.dist

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl, gd, xml, soap, zip, bcmath
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress
          composer require --dev phpstan/phpstan:^1.8
          composer require --dev squizlabs/php_codesniffer:^3.7

      - name: Run PHPStan
        run: vendor/bin/phpstan analyze --level=3 ./ --exclude=vendor

      - name: Run PHP_CodeSniffer
        run: vendor/bin/phpcs --standard=PSR12 --extensions=php --ignore=vendor/* .
